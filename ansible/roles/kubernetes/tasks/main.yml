---
# tasks file for kubernetes
#

- name: determine mode
  set_fact:
    kubernetes_mode: "{{ ansible_local.aws.kubernetes.mode }}"
  when: ansible_local.aws.kubernetes.mode is defined


- name: install dependencies
  apt:
    name: [ apt-transport-https, ca-certificates ]
    update_cache: yes


- name: apt signing keys
  apt_key:
    url: "{{ item }}"
  with_items:
    - https://download.docker.com/linux/ubuntu/gpg
    - https://packages.cloud.google.com/apt/doc/apt-key.gpg


- name: apt repositories
  apt_repository:
    repo: "{{ item }}"
  with_items:
    - deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    - deb https://apt.kubernetes.io/ kubernetes-xenial main


- name: install docker & kubernetes
  apt: 
    name: [ containerd.io, docker-ce, docker-ce-cli, kubelet, kubeadm, kubectl ]


- name: remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items: [ swap, none ]


- name: swapoff
  command: swapoff -a
  when: ansible_swaptotal_mb > 0
  tags: [ 'molecule-notest' ]


- name: start docker & kubelet
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: [ docker, kubelet ]


- name: configure controller
  block:
    - name: check if already initialised
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubernetes_init_stat
    
    
    - name: kubeadm init
      command: >
        kubeadm init
        --apiserver-cert-extra-sans={{ ansible_host }}
        --pod-network-cidr=10.244.0.0/16
        --apiserver-advertise-address={{ ansible_default_ipv4.address }}
        --ignore-preflight-errors=all
        --token {{ kubernetes_token }}
      when:
        - not kubernetes_init_stat.stat.exists


    - name: fetch remote kubeconfig
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: kubeconfig.yaml
        flat: yes


    - name: update kubeconfig
      lineinfile:
        name: kubeconfig.yaml
        regexp: "server:"
        line: "    server: https://{{ ansible_host }}:6443"
      connection: local
      become: no
      tags: [ molecule-notest ]
    
  when: kubernetes_mode == 'controller'


- name: configure worker
  block:
    - name: Determine controller_ip
      set_fact:
        controller_ip: "{{ ansible_local.aws.kubernetes.controller_ip }}"
      when: ansible_local.aws.kubernetes.controller_ip is defined


    - name: kubeadm join
      shell: >
        kubeadm join --token {{ kubernetes_token }} --ignore-preflight-errors=all --discovery-token-unsafe-skip-ca-verification {{ controller_ip }}:6443
        creates=/etc/kubernetes/kubelet.conf
      tags: [ molecule-nolint ]

  when: kubernetes_mode == 'worker'
