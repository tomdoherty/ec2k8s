---
# tasks file for kubernetes

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common


- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present


- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present


- name: Install docker and its dependencies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io
  notify:
    - docker status


- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none


- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0


- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present


- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list


- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl


- name: Start kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: started


- include_tasks: controller.yml
  when: ansible_local.aws.kubernetes.mode == 'controller'


- include_tasks: worker.yml
  when: ansible_local.aws.kubernetes.mode == 'worker'


- name: Copy example app
  copy:
    src: hello.yaml
    dest: /tmp/hello.yaml
  when: ansible_local.aws.kubernetes.mode == 'controller'


- name: Deploy example app
  command: >
    kubectl apply -f /tmp/hello.yaml
  when: ansible_local.aws.kubernetes.mode == 'controller'
